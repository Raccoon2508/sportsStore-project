{
    "root": true,
    "ignorePatterns": [
      "projects/**/*"
    ],
    "overrides": [
      {
        "files": [
          "*.ts"
        ],
        "env": {
          "jasmine": true,
          "es6": true
        },
        "parserOptions": {
          "ecmaVersion": 2017,
          "project": [
            "tsconfig.json",
            "e2e/tsconfig.json"
          ],
          "createDefaultProgram": true
        },
        "extends": [
          "plugin:@angular-eslint/ng-cli-compat",
          "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
          "plugin:@angular-eslint/template/process-inline-templates"
        ],
        "rules": {
          "@angular-eslint/component-selector": [
            "error",
            {
              "type": "element",
              "style": "kebab-case"
            }
          ],
          "@angular-eslint/contextual-lifecycle": "error",
          "@angular-eslint/directive-class-suffix": "off",
          "@angular-eslint/directive-selector": [
            "error",
            {
              "type": "attribute",
              "style": "camelCase"
            }
          ],
          "@angular-eslint/no-conflicting-lifecycle": "off",
          "@angular-eslint/no-host-metadata-property": "off",
          "@angular-eslint/no-input-rename": "off",
          "@angular-eslint/no-inputs-metadata-property": "off",
          "@angular-eslint/no-output-native": "error",
          "@angular-eslint/no-output-on-prefix": "error",
          "@angular-eslint/no-output-rename": "off",
          "@angular-eslint/no-outputs-metadata-property": "off",
          "@angular-eslint/use-lifecycle-interface": "error",
          "@angular-eslint/use-pipe-transform-interface": "error",
          "@typescript-eslint/adjacent-overload-signatures": "off",
          "@typescript-eslint/array-type": "off",
          "@typescript-eslint/await-thenable": "error",
          "@typescript-eslint/ban-ts-comment": "off",
          "@typescript-eslint/ban-types": [
            "error",
            {
              "types": {
                "Object": {
                  "message": "Avoid using the `Object` type. Did you mean `object`?"
                },
                "Function": {
                  "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                },
                "Boolean": {
                  "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                },
                "Number": {
                  "message": "Avoid using the `Number` type. Did you mean `number`?"
                },
                "String": {
                  "message": "Avoid using the `String` type. Did you mean `string`?"
                },
                "Symbol": {
                  "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                }
              }
            }
          ],
          "@typescript-eslint/consistent-type-assertions": "error",
          "@typescript-eslint/dot-notation": "off",
          "@typescript-eslint/explicit-module-boundary-types": "error",
          "@typescript-eslint/indent": [
            "error",
            4,
            {
              "FunctionDeclaration": {
                "parameters": "first"
              },
              "FunctionExpression": {
                "parameters": "first"
              }
            }
          ],
          "@typescript-eslint/member-delimiter-style": [
            "error",
            {
              "multiline": {
                "delimiter": "semi",
                "requireLast": true
              },
              "singleline": {
                "delimiter": "semi",
                "requireLast": false
              }
            }
          ],
          "@typescript-eslint/member-ordering": [
            "off",
            { "default": ["signature", "field", "constructor", "method"] }
          ],
          "@typescript-eslint/naming-convention": "off",
          "@typescript-eslint/no-array-constructor": "off",
          "@typescript-eslint/no-empty-interface": "error",
          "@typescript-eslint/no-explicit-any": "error",
          "@typescript-eslint/no-extra-non-null-assertion": "error",
          "@typescript-eslint/no-extra-semi": "error",
          "@typescript-eslint/no-floating-promises": "off",
          "@typescript-eslint/no-for-in-array": "off",
          "@typescript-eslint/no-implied-eval": "error",
          "@typescript-eslint/no-inferrable-types": [
            "error",
            {
              "ignoreParameters": true
            }
          ],
          "@typescript-eslint/no-misused-new": "off",
          "@typescript-eslint/no-misused-promises": "off",
          "@typescript-eslint/no-namespace": "off",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-parameter-properties": "off",
          "@typescript-eslint/no-this-alias": "off",
          "@typescript-eslint/no-unnecessary-type-assertion": "error",
          "@typescript-eslint/no-unsafe-assignment": "off", // about any
          "@typescript-eslint/no-unsafe-call": "off", // about any
          "@typescript-eslint/no-unsafe-member-access": "off", // about any
          "@typescript-eslint/no-unsafe-return": "off", // about any
          "@typescript-eslint/no-unused-expressions": [
            "error", {
              "allowTernary": true
            }
          ],
          "@typescript-eslint/no-unused-vars": "error",
          "@typescript-eslint/no-use-before-define": "off",
          "@typescript-eslint/no-var-requires": "error",
          "@typescript-eslint/prefer-as-const": "error",
          "@typescript-eslint/prefer-function-type": "error",
          "@typescript-eslint/prefer-namespace-keyword": "off",
          "@typescript-eslint/prefer-regexp-exec": "error",
          "@typescript-eslint/quotes": [
            "error",
            "single"
          ],
          "@typescript-eslint/require-await": "error",
          "@typescript-eslint/restrict-plus-operands": "error",
          "@typescript-eslint/restrict-template-expressions": "off",
          "@typescript-eslint/semi": [
            "error",
            "always"
          ],
          "@typescript-eslint/triple-slash-reference": [
            "error",
            {
              "path": "always",
              "types": "prefer-import",
              "lib": "always"
            }
          ],
          "@typescript-eslint/type-annotation-spacing": "error",
          "@typescript-eslint/unbound-method": "off",
          "@typescript-eslint/unified-signatures": "error",
          "arrow-body-style": "error",
          "brace-style": "error",
          "comma-spacing": [
            "error",
            {
              "before": false,
              "after": true
            }
          ],
          "complexity": "off",
          "constructor-super": "error",
          "curly": ["warn", "multi-line"],
          "eol-last": "off",
          "eqeqeq": [
            "error",
            "smart"
          ],
          "for-direction": "off",
          "getter-return": "error",
          "guard-for-in": "off",
          "id-blacklist": [
            "error",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
          ],
          "id-match": "off",
          "import/no-deprecated": "off",
          "jsdoc/check-alignment": "off",
          "jsdoc/check-indentation": "off",
          "jsdoc/newline-after-description": "off",
          "jsdoc/no-types": "off",
          "max-classes-per-file": "off",
          "max-len": [
            "error",
            {
              "code": 300
            }
          ],
          "new-parens": "off",
          "no-alert": "off",
          "no-array-constructor": "off",
          "no-async-promise-executor": "off",
          "no-bitwise": "error",
          "no-caller": "off",
          "no-case-declarations": "error",
          "no-class-assign": "off",
          "no-compare-neg-zero": "off",
          "no-cond-assign": "error",
          "no-console": [
            "error",
            {
              "allow": [
                "log",
                "warn",
                "dir",
                "timeLog",
                "assert",
                "clear",
                "count",
                "countReset",
                "group",
                "groupEnd",
                "table",
                "dirxml",
                "error",
                "groupCollapsed",
                "Console",
                "profile",
                "profileEnd",
                "timeStamp",
                "context"
              ]
            }
          ],
          "no-const-assign": "error",
          "no-constant-condition": "error",
          "no-control-regex": "off",
          "no-debugger": "off",
          "no-delete-var": "off",
          "no-dupe-args": "off",
          "no-dupe-class-members": "error",
          "no-dupe-else-if": "error",
          "no-dupe-keys": "error",
          "no-duplicate-case": "error",
          "no-empty": "off",
          "no-empty-character-class": "off",
          "no-empty-pattern": "off",
          "no-eval": "off",
          "no-ex-assign": "off",
          "no-extra-boolean-cast": "error",
          "no-extra-semi": "error",
          "no-fallthrough": "off",
          "no-func-assign": "error",
          "no-global-assign": "off",
          "no-implied-eval": "off",
          "no-import-assign": "error",
          "no-inner-declarations": "error",
          "no-invalid-regexp": "error",
          "no-invalid-this": "off",
          "no-irregular-whitespace": "error",
          "no-misleading-character-class": "error",
          "no-mixed-spaces-and-tabs": "error",
          "no-multi-spaces": "error",
          "no-new-symbol": "error",
          "no-new-wrappers": "error",
          "no-obj-calls": "error",
          "no-octal": "off",
          "no-prototype-builtins": "off",
          "no-redeclare": "error",
          "no-regex-spaces": "off",
          "no-restricted-imports": [
            "error",
            {"patterns": ["../*"]}
          ],
          "no-self-assign": "off",
          "no-setter-return": "off",
          "no-shadow": [
            "off",
            {
              "hoist": "all"
            }
          ],
          "no-shadow-restricted-names": "off",
          "no-sparse-arrays": "error",
          "no-this-before-super": "error",
          "no-throw-literal": "off",
          "no-trailing-spaces": "error",
          "no-undef": "off",
          "no-undef-init": "off",
          "no-underscore-dangle": "off",
          "no-unexpected-multiline": "error",
          "no-unreachable": "error",
          "no-unsafe-finally": "off",
          "no-unsafe-negation": "error",
          "no-unused-labels": "error",
          "no-useless-catch": "off",
          "no-useless-escape": "off",
          "no-var": "error",
          "no-with": "error",
          "object-property-newline": "off",
          "object-shorthand": "error",
          "one-var": [
            "error",
            "never"
          ],
          "one-var-declaration-per-line": [
            "error",
            "always"
          ],
          "prefer-arrow/prefer-arrow-functions": "error",
          "prefer-const": "error",
          "quote-props": [
            "error",
            "as-needed"
          ],
          "quotes": [
            "error",
            "single"
          ],
          "radix": "off",
          "require-atomic-updates": "error",
          "require-await": "off",
          "require-yield": "off",
          "semi": [
            "error",
            "always"
          ],
          "semi-spacing": [
            "error",
            {
              "before": false,
              "after": true
            }
          ],
          "space-before-function-paren": [
            "error",
            {
              "anonymous": "never",
              "asyncArrow": "always",
              "named": "never"
            }
          ],
          "spaced-comment": [
            "off",
            "always",
            {
              "markers": [
                "/"
              ]
            }
          ],
          "use-isnan": "off",
          "valid-typeof": "off",
          "no-multiple-empty-lines": ["error", { "max": 1, "maxBOF": 1}],
          "prefer-for-of": "off"
        }
      },
        {
        "files": [
          "*.html"
        ],
        "parser": "@angular-eslint/template-parser",
        "extends": [
          "plugin:@angular-eslint/template/recommended"
        ],
        "rules": {
          "@angular-eslint/template/banana-in-box": "off",
          "@angular-eslint/template/no-negated-async": "off"
        }
      } ,
      {
        "files": [
          "*.spec.ts",
          "*.e2e-spec.ts"
        ],
        "rules": {
          "@typescript-eslint/no-floating-promises": "off"
        } 
      } 
    ]
  }